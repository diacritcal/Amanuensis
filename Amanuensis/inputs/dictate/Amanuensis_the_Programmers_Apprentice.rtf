{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww26820\viewh26480\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs48 \cf0 Language is the key to communication. In the case of unequal capability, communication must be on the terms of the more capable interlocutor, and the onus of understanding on the less capable partner collaboration. In practical terms, this means that we need to bootstrap the apprentice to achieve some basic competence in both language and in working with computers so as not to test the patience of the expert programmer. \
\
We suggest several strategies for achieving basic competence in these two spheres by creating a basic conventional dialogue management system that works in tandem with what will become over time a more competent language facility implemented as a deep neural network. The deployment of these two language systems will be controlled on a sentence-by-sentence basis by a meta-reinforcement learning system which over time will depend less and less on the more conventional system. \
\
The conventional system will be built as a hierarchical planner following in the footsteps of CMU Ravenclaw Dialogue System and will come equipped with a relatively sophisticated set of hierarchical dialogue plans for dealing with errors in communication due to ambiguity and misunderstanding. While rather clumsy compared the ways in which humans handle ambiguity and misunderstanding, these dialogue plans are designed to resolve the ambiguity and mitigate the consequences of misunderstanding quickly and get conversation back on track by asking for clarification or alternative restatement in as inconspicuous manner a as possible.\
\
The bootstrap conventional dialogue system will also include a collection of hierarchical plans for interpreting requests made by the expert program to alter programs in the shared editor space, execute programs on specified inputs and perform analyses on the output generated by the program, debugger or other tools provided the integrated development environment accessible through a set of commands implemented as either primitive tasks in the hierarchical planner or through a differentiable neural computer interface using the deep neural network language facility that will ultimately replace most of the functions of the hierarchical-planner-based dialogue management system.\
\
This dual language system controlled meta reinforcement learning neural network allows the apprentice to practice on its own and rewards it for learning to emulate the less flexible hierarchical planner implementation. Indeed there is quite a bit that we can do to preload the apprentice\'92s basic language competence and facility using the integrated development environment and related compiler tool chain. A parallel dialogue system implemented using the same hierarchical planner can be designed to carry out the programmer\'92s side of the conversation so as to train the neural network language facility and the meta-reinforcement learning system that controls its deployment utterance by utterance. And of course we can create a large corpus from the discussions between pair programmers engaged in writing code for projects requiring same programming language and similar programming tasks.}